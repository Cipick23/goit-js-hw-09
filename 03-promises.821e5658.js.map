{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAwBE,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbQ,SAASC,eAAe,eAAeC,iBAAiB,UAAU,SAAUC,GAC1EA,EAAMC,iBAEN,MAAMC,EAAQC,SAASC,KAAKC,cAAc,kBAAkBC,OACtDC,EAAOJ,SAASC,KAAKC,cAAc,iBAAiBC,OACpDE,EAASL,SAASC,KAAKC,cAAc,mBAAmBC,OAE9D,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAIhCtB,EAHiBsB,EACIP,GAASO,EAAI,GAAKF,GAGpCG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// import 'notiflix/dist/notiflix-3.2.6.min.css';\n\n  document.getElementById('promiseForm').addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const delay = parseInt(this.querySelector('[name=\"delay\"]').value);\n    const step = parseInt(this.querySelector('[name=\"step\"]').value);\n    const amount = parseInt(this.querySelector('[name=\"amount\"]').value);\n\n    for (let i = 1; i <= amount; i++) {\n      const position = i;\n      const currentDelay = delay + (i - 1) * step;\n\n      createPromise(position, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  };\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","getElementById","addEventListener","event","preventDefault","delay1","parseInt","this","querySelector","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.821e5658.js.map"}